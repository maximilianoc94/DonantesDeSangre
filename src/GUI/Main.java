/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BackEnd.Controlador;
import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Maximiliano
 */
public class Main extends javax.swing.JFrame {

    private final Controlador App;
    private final Donante Ficha;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        App = new Controlador();
        Ficha = new Donante(App);
        Agregar.setVisible(false);

        //Llenar Lista
        for (int i = 0; i < App.getListaDonantes().size(); i++) {
            BackEnd.Donante actual = App.getListaDonantes().get(i);
            Modelo.addElement(actual.getCedula() + ": " + actual.getNombre() + " " + actual.getApellido());
        }
        Modelo2.addElement("Amazonas");
        Modelo2.addElement("Anzoátegui");
        Modelo2.addElement("Apure");
        Modelo2.addElement("Aragua");
        Modelo2.addElement("Barinas");
        Modelo2.addElement("Bolívar");
        Modelo2.addElement("Carabobo");
        Modelo2.addElement("Cojedes");
        Modelo2.addElement("Delta Amacuro");
        Modelo2.addElement("Distrito Capital");
        Modelo2.addElement("Falcón");
        Modelo2.addElement("Guárico");
        Modelo2.addElement("Lara");
        Modelo2.addElement("Mérida");
        Modelo2.addElement("Miranda");
        Modelo2.addElement("Monagas");
        Modelo2.addElement("Nueva Esparta");
        Modelo2.addElement("Portuguesa");
        Modelo2.addElement("Sucre");
        Modelo2.addElement("Táchira");
        Modelo2.addElement("Trujillo");
        Modelo2.addElement("Vargas");
        Modelo2.addElement("Zulia");
    }

    public int cuentaDigitos(String cadena) {
        int cant = 0;
        for (int i = 0; i < cadena.length(); i++) {
            if (Character.isDigit(cadena.charAt(i))) {
                cant++;
            }
        }
        return cant;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sexo = new javax.swing.ButtonGroup();
        tipoSangre = new javax.swing.ButtonGroup();
        Agregar = new javax.swing.JPanel();
        ONTV1 = new javax.swing.JLabel();
        Nombre = new javax.swing.JTextField();
        Apellidos = new javax.swing.JTextField();
        CedulaDonante = new javax.swing.JTextField();
        Telefono = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        Masculino = new javax.swing.JRadioButton();
        Femenino = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        O0 = new javax.swing.JRadioButton();
        A1 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        jRadioButton9 = new javax.swing.JRadioButton();
        jRadioButton10 = new javax.swing.JRadioButton();
        jRadioButton11 = new javax.swing.JRadioButton();
        jRadioButton12 = new javax.swing.JRadioButton();
        O1 = new javax.swing.JRadioButton();
        FechaNacimiento = new com.toedter.calendar.JDateChooser();
        FechaUltDonacion = new com.toedter.calendar.JDateChooser();
        PesoDonante = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Modelo2 = new DefaultListModel();
        Estados = new javax.swing.JList<>();
        FechaUltPiercing = new com.toedter.calendar.JDateChooser();
        AgregarDonante1 = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        TienePiercing = new javax.swing.JCheckBox();
        HeDonado = new javax.swing.JCheckBox();
        Principal = new javax.swing.JPanel();
        ONTV = new javax.swing.JLabel();
        AgregarDonante = new javax.swing.JButton();
        TipoSangre = new javax.swing.JTextField();
        BuscarSangre = new javax.swing.JButton();
        CampoCedula = new javax.swing.JTextField();
        BuscarCedula = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Modelo = new DefaultListModel();
        Lista = new javax.swing.JList<>();
        SeleccionarDonante = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ONTV - Casale, De Lellis");
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setFocusCycleRoot(false);
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);
        setSize(new java.awt.Dimension(550, 610));
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        Agregar.setBackground(new java.awt.Color(255, 255, 255));
        Agregar.setMaximumSize(new java.awt.Dimension(552, 667));
        Agregar.setMinimumSize(new java.awt.Dimension(552, 667));
        Agregar.setPreferredSize(new java.awt.Dimension(552, 667));

        ONTV1.setFont(new java.awt.Font("Monospaced", 3, 48)); // NOI18N
        ONTV1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ONTV1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PNG/Untitled-1.png"))); // NOI18N

        Nombre.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        Nombre.setText(" ");
        Nombre.setToolTipText("Ej: Pepito Jose");
        Nombre.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nombres", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 74, 127))); // NOI18N
        Nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreActionPerformed(evt);
            }
        });

        Apellidos.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        Apellidos.setText(" ");
        Apellidos.setToolTipText("Ej: Perez Gonzalez");
        Apellidos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Apellidos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 74, 127))); // NOI18N
        Apellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApellidosActionPerformed(evt);
            }
        });

        CedulaDonante.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        CedulaDonante.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cedula", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 74, 127))); // NOI18N
        CedulaDonante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CedulaDonanteActionPerformed(evt);
            }
        });

        Telefono.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        Telefono.setText(" ");
        Telefono.setToolTipText("Ej: 04126958754");
        Telefono.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Telefono", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 74, 127))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sexo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 74, 127))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        sexo.add(Masculino);
        Masculino.setText("Masculino");

        sexo.add(Femenino);
        Femenino.setText("Femenino");
        Femenino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FemeninoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(Femenino)
                .addGap(18, 18, 18)
                .addComponent(Masculino)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Femenino)
                    .addComponent(Masculino))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tipo de Sangre", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 74, 127))); // NOI18N

        tipoSangre.add(O0);
        O0.setText("O-");

        tipoSangre.add(A1);
        A1.setText("A+");

        tipoSangre.add(jRadioButton6);
        jRadioButton6.setText("A-");

        tipoSangre.add(jRadioButton7);
        jRadioButton7.setText("B+");

        tipoSangre.add(jRadioButton8);
        jRadioButton8.setText("B-");

        tipoSangre.add(jRadioButton9);
        jRadioButton9.setText("AB+");

        tipoSangre.add(jRadioButton10);
        jRadioButton10.setText("AB-");

        tipoSangre.add(jRadioButton11);
        jRadioButton11.setText("Rh+");

        tipoSangre.add(jRadioButton12);
        jRadioButton12.setText("Rh-");

        tipoSangre.add(O1);
        O1.setText("O+");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jRadioButton8)
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(O1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jRadioButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton10))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(O0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(A1)))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton6)
                    .addComponent(jRadioButton11))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton12)
                    .addComponent(jRadioButton7)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(O0)
                    .addComponent(A1)
                    .addComponent(jRadioButton6)
                    .addComponent(jRadioButton7)
                    .addComponent(O1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton8)
                    .addComponent(jRadioButton9)
                    .addComponent(jRadioButton10)
                    .addComponent(jRadioButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton12))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        FechaNacimiento.setBackground(new java.awt.Color(255, 255, 255));
        FechaNacimiento.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fecha de nacimiento", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 74, 127))); // NOI18N

        FechaUltDonacion.setBackground(new java.awt.Color(255, 255, 255));
        FechaUltDonacion.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fecha de última donación", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 74, 127))); // NOI18N

        PesoDonante.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        PesoDonante.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Peso", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 74, 127))); // NOI18N

        Estados.setModel(Modelo2);
        Estados.setForeground(new java.awt.Color(0, 74, 127));
        jScrollPane2.setViewportView(Estados);

        FechaUltPiercing.setBackground(new java.awt.Color(255, 255, 255));
        FechaUltPiercing.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fecha de último piercing o tatuaje", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 74, 127))); // NOI18N
        FechaUltPiercing.setEnabled(TienePiercing.isSelected());
        FechaUltPiercing.setOpaque(false);

        AgregarDonante1.setBackground(new java.awt.Color(0, 74, 127));
        AgregarDonante1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        AgregarDonante1.setForeground(new java.awt.Color(255, 255, 255));
        AgregarDonante1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PNG/botonAgregar.png"))); // NOI18N
        AgregarDonante1.setText("AGREGAR");
        AgregarDonante1.setToolTipText("Agregar un Donante");
        AgregarDonante1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        AgregarDonante1.setBorderPainted(false);
        AgregarDonante1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AgregarDonante1.setFocusPainted(false);
        AgregarDonante1.setOpaque(false);
        AgregarDonante1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarDonante1ActionPerformed(evt);
            }
        });

        cancelar.setBackground(new java.awt.Color(0, 74, 127));
        cancelar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cancelar.setForeground(new java.awt.Color(255, 255, 255));
        cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PNG/botonCancelar.png"))); // NOI18N
        cancelar.setText("CANCELAR");
        cancelar.setToolTipText("");
        cancelar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cancelar.setBorderPainted(false);
        cancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelar.setFocusPainted(false);
        cancelar.setOpaque(false);
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        TienePiercing.setBackground(new java.awt.Color(255, 255, 255));
        TienePiercing.setForeground(new java.awt.Color(0, 74, 127));
        TienePiercing.setText("Piercings o Tatuajes");
        TienePiercing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TienePiercingActionPerformed(evt);
            }
        });

        HeDonado.setBackground(new java.awt.Color(255, 255, 255));
        HeDonado.setForeground(new java.awt.Color(0, 74, 127));
        HeDonado.setText("Nunca he donado sangre");
        HeDonado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HeDonadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AgregarLayout = new javax.swing.GroupLayout(Agregar);
        Agregar.setLayout(AgregarLayout);
        AgregarLayout.setHorizontalGroup(
            AgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ONTV1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarLayout.createSequentialGroup()
                        .addGroup(AgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(FechaUltPiercing, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PesoDonante, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FechaNacimiento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CedulaDonante, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Nombre, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AgregarDonante1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35)
                        .addGroup(AgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cancelar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Telefono, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Apellidos, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(FechaUltDonacion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE))
                        .addGap(18, 18, 18)))
                .addContainerGap())
            .addGroup(AgregarLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(TienePiercing)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(HeDonado)
                .addGap(89, 89, 89))
        );
        AgregarLayout.setVerticalGroup(
            AgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ONTV1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Nombre)
                    .addComponent(Apellidos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CedulaDonante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AgregarLayout.createSequentialGroup()
                        .addComponent(FechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PesoDonante, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TienePiercing)
                    .addComponent(HeDonado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FechaUltDonacion, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FechaUltPiercing, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarDonante1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );

        getContentPane().add(Agregar);

        Principal.setBackground(new java.awt.Color(255, 255, 255));
        Principal.setMaximumSize(new java.awt.Dimension(552, 667));
        Principal.setMinimumSize(new java.awt.Dimension(552, 667));
        Principal.setPreferredSize(new java.awt.Dimension(552, 667));

        ONTV.setFont(new java.awt.Font("Monospaced", 3, 48)); // NOI18N
        ONTV.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ONTV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PNG/Untitled-1.png"))); // NOI18N

        AgregarDonante.setBackground(new java.awt.Color(0, 74, 127));
        AgregarDonante.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        AgregarDonante.setForeground(new java.awt.Color(255, 255, 255));
        AgregarDonante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PNG/botonAgregar.png"))); // NOI18N
        AgregarDonante.setText("AGREGAR");
        AgregarDonante.setToolTipText("Agregar un Donante");
        AgregarDonante.setBorder(null);
        AgregarDonante.setBorderPainted(false);
        AgregarDonante.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AgregarDonante.setFocusPainted(false);
        AgregarDonante.setOpaque(false);
        AgregarDonante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarDonanteActionPerformed(evt);
            }
        });

        TipoSangre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TipoSangre.setText("Tipo de Sangre");
        TipoSangre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TipoSangreMouseClicked(evt);
            }
        });
        TipoSangre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TipoSangreActionPerformed(evt);
            }
        });

        BuscarSangre.setBackground(new java.awt.Color(255, 255, 255));
        BuscarSangre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PNG/Buscar 30x30.png"))); // NOI18N
        BuscarSangre.setToolTipText("");
        BuscarSangre.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BuscarSangre.setContentAreaFilled(false);
        BuscarSangre.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/PNG/Buscar 30x30 Pressed.png"))); // NOI18N
        BuscarSangre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarSangreActionPerformed(evt);
            }
        });

        CampoCedula.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CampoCedula.setText("Cédula");
        CampoCedula.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CampoCedulaMouseClicked(evt);
            }
        });
        CampoCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoCedulaActionPerformed(evt);
            }
        });

        BuscarCedula.setBackground(new java.awt.Color(255, 255, 255));
        BuscarCedula.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PNG/Buscar 30x30.png"))); // NOI18N
        BuscarCedula.setToolTipText("");
        BuscarCedula.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BuscarCedula.setContentAreaFilled(false);
        BuscarCedula.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/PNG/Buscar 30x30 Pressed.png"))); // NOI18N
        BuscarCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarCedulaActionPerformed(evt);
            }
        });

        Lista.setModel(Modelo);
        Lista.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Lista.setMaximumSize(new java.awt.Dimension(512, 353));
        Lista.setMinimumSize(new java.awt.Dimension(512, 353));
        Lista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Lista);

        SeleccionarDonante.setBackground(new java.awt.Color(0, 74, 127));
        SeleccionarDonante.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        SeleccionarDonante.setForeground(new java.awt.Color(255, 255, 255));
        SeleccionarDonante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PNG/botonSeleccionar.png"))); // NOI18N
        SeleccionarDonante.setText("SELECCIONAR");
        SeleccionarDonante.setToolTipText("Ver al donante seleccionado");
        SeleccionarDonante.setBorder(null);
        SeleccionarDonante.setBorderPainted(false);
        SeleccionarDonante.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SeleccionarDonante.setFocusPainted(false);
        SeleccionarDonante.setOpaque(false);
        SeleccionarDonante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeleccionarDonanteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PrincipalLayout = new javax.swing.GroupLayout(Principal);
        Principal.setLayout(PrincipalLayout);
        PrincipalLayout.setHorizontalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ONTV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(CampoCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BuscarCedula)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TipoSangre, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(BuscarSangre))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(SeleccionarDonante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AgregarDonante, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        PrincipalLayout.setVerticalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrincipalLayout.createSequentialGroup()
                .addComponent(ONTV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CampoCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BuscarCedula)
                    .addComponent(TipoSangre, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BuscarSangre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SeleccionarDonante, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AgregarDonante, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        getContentPane().add(Principal);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TienePiercingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TienePiercingActionPerformed
        FechaUltPiercing.setEnabled(TienePiercing.isSelected());
    }//GEN-LAST:event_TienePiercingActionPerformed

    private void AgregarDonante1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarDonante1ActionPerformed
        try {
            String nombre = Nombre.getText();
            String apellido = Apellidos.getText();
            int cedula = Integer.parseInt(CedulaDonante.getText());
            String tlfn = Telefono.getText();
            String genero;
            if (Femenino.isSelected()) {
                genero = "Femenino";
            } else {
                genero = "Masculino";
            }
            String tipoDeSangre = null;
            if (O1.isSelected()) {
                tipoDeSangre = "O+";
            } else if (O0.isSelected()) {
                tipoDeSangre = "O-";
            } else if (A1.isSelected()) {
                tipoDeSangre = "A+";
            } else if (jRadioButton6.isSelected()) {
                tipoDeSangre = "A-";
            } else if (jRadioButton9.isSelected()) {
                tipoDeSangre = "AB+";
            } else if (jRadioButton10.isSelected()) {
                tipoDeSangre = "AB-";
            } else if (jRadioButton8.isSelected()) {
                tipoDeSangre = "B-";
            } else if (jRadioButton7.isSelected()) {
                tipoDeSangre = "B+";
            } else if (jRadioButton12.isSelected()) {
                tipoDeSangre = "RH-";
            } else if (jRadioButton11.isSelected()) {
                tipoDeSangre = "RH+";
            }
            long NoFuturo = new Date().getTime();
            Date fechaNacimiento = FechaNacimiento.getDate();
            int Index = Estados.getSelectedIndex();
            String direccion = "";
            if (Index != -1) {
                direccion = (String) Modelo2.get(Index);
            }
            int peso = Integer.parseInt(PesoDonante.getText());
            Date ultDonacion = fechaNacimiento;
            if (!HeDonado.isSelected()) {
                ultDonacion = FechaUltDonacion.getDate();
            }
            boolean piercing = TienePiercing.isSelected();
            Date fechaPiercing = null;
            if (TienePiercing.isSelected()) {
                fechaPiercing = FechaUltPiercing.getDate();

            }
            boolean FechaUltBircOK = false;
            if (fechaPiercing != null) {
                FechaUltBircOK = NoFuturo - fechaPiercing.getTime() > 0;
            }
            boolean FechaNacOK = false;
            if (fechaNacimiento != null) {
                FechaNacOK = NoFuturo - fechaNacimiento.getTime() > 0;
            }
            boolean FechaUltDonOK = false;
            if (ultDonacion != null) {
                FechaUltDonOK = NoFuturo - ultDonacion.getTime() > 0;
            }

            if (!nombre.isEmpty() && cuentaDigitos(nombre) == 0 && nombre.length() + apellido.length() <= 60) {
                if (!apellido.isEmpty() && cuentaDigitos(apellido) == 0) {
                    if (cedula > 0) {
                        if (!tlfn.isEmpty() && cuentaDigitos(tlfn) == 11 && tlfn.length() == cuentaDigitos(tlfn) + 1) {
                            if (!genero.isEmpty()) {
                                if (tipoDeSangre != null) {
                                    if (fechaNacimiento != null && FechaNacOK) {
                                        if (!direccion.isEmpty()) {
                                            if (peso > 1) {
                                                if (ultDonacion != null && FechaUltDonOK) {
                                                    if (App.buscarPorCedula(cedula) == null) {
                                                        if (!piercing) {
                                                            App.agregarDonante(nombre, apellido, cedula, tlfn, genero, tipoDeSangre, fechaNacimiento, direccion, peso, ultDonacion, piercing);
                                                            App.escribirData();
                                                            Agregar.setVisible(false);
                                                            Principal.setVisible(true);
                                                            Modelo.clear();
                                                            for (int i = 0; i < App.getListaDonantes().size(); i++) {
                                                                BackEnd.Donante actual = App.getListaDonantes().get(i);
                                                                Modelo.addElement(actual.getCedula() + ": " + actual.getNombre() + " " + actual.getApellido());
                                                            }
                                                            Nombre.setText("");
                                                            Apellidos.setText("");
                                                            CedulaDonante.setText("");
                                                            Telefono.setText("");
                                                            Femenino.setSelected(false);
                                                            Masculino.setSelected(false);
                                                            O1.setSelected(false);
                                                            O0.setSelected(false);
                                                            A1.setSelected(false);
                                                            jRadioButton6.setSelected(false);
                                                            jRadioButton9.setSelected(false);
                                                            jRadioButton10.setSelected(false);
                                                            jRadioButton8.setSelected(false);
                                                            jRadioButton7.setSelected(false);
                                                            jRadioButton12.setSelected(false);
                                                            jRadioButton11.setSelected(false);
                                                            FechaNacimiento.setCalendar(null);
                                                            PesoDonante.setText("");
                                                            FechaUltDonacion.setCalendar(null);
                                                            TienePiercing.setSelected(false);
                                                            JOptionPane.showMessageDialog(null, "Agregado exitosamente!");
                                                        } else {
                                                            if (FechaUltBircOK) {
                                                                App.agregarDonante(nombre, apellido, cedula, tlfn, genero, tipoDeSangre, fechaNacimiento, direccion, peso, ultDonacion, piercing, fechaPiercing);
                                                                App.escribirData();
                                                                Agregar.setVisible(false);
                                                                Principal.setVisible(true);
                                                                Modelo.clear();
                                                                for (int i = 0; i < App.getListaDonantes().size(); i++) {
                                                                    BackEnd.Donante actual = App.getListaDonantes().get(i);
                                                                    Modelo.addElement(actual.getCedula() + ": " + actual.getNombre() + " " + actual.getApellido());
                                                                }
                                                                Nombre.setText("");
                                                                Apellidos.setText("");
                                                                CedulaDonante.setText("");
                                                                Telefono.setText("");
                                                                Femenino.setSelected(false);
                                                                Masculino.setSelected(false);
                                                                O1.setSelected(false);
                                                                O0.setSelected(false);
                                                                A1.setSelected(false);
                                                                jRadioButton6.setSelected(false);
                                                                jRadioButton9.setSelected(false);
                                                                jRadioButton10.setSelected(false);
                                                                jRadioButton8.setSelected(false);
                                                                jRadioButton7.setSelected(false);
                                                                jRadioButton12.setSelected(false);
                                                                jRadioButton11.setSelected(false);
                                                                FechaNacimiento.setCalendar(null);
                                                                PesoDonante.setText("");
                                                                FechaUltDonacion.setCalendar(null);
                                                                TienePiercing.setSelected(false);
                                                                JOptionPane.showMessageDialog(null, "Agregado exitosamente!");
                                                            } else {
                                                                JOptionPane.showMessageDialog(null, "Fecha ultimo tatuaje no valida!!");
                                                            }
                                                        }

                                                    } else {
                                                        JOptionPane.showMessageDialog(null, "La Cedula ya se encuentra en sistema!");
                                                    }
                                                } else {
                                                    JOptionPane.showMessageDialog(null, "Falta el campo de ultima donacion!");
                                                }
                                            } else {
                                                JOptionPane.showMessageDialog(null, "El peso no es valido!");
                                            }
                                        } else {
                                            JOptionPane.showMessageDialog(null, "Seleccione una direccion!");
                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Coloque su fecha de nacimiento!");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Seleccione un tipo de sangre!");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Seleccione su genero");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "El numero de telefono no es valido o esta colocando una fecha futura!");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Cedula no valida!");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "No se aceptan digitos en su apellido!");
                }
            } else {
                JOptionPane.showMessageDialog(null, "No se aceptan digitos en su nombre!");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "No coloque letras ni en su cedula ni en su peso!");
        }

    }//GEN-LAST:event_AgregarDonante1ActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        Principal.setVisible(true);
        Agregar.setVisible(false);
    }//GEN-LAST:event_cancelarActionPerformed

    private void AgregarDonanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarDonanteActionPerformed
        Principal.setVisible(false);
        Agregar.setVisible(true);
        Estados.setSelectedIndex(0);
    }//GEN-LAST:event_AgregarDonanteActionPerformed

    private void BuscarCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarCedulaActionPerformed
        Modelo.clear();
        BackEnd.Donante Buscado = null;
        try {
            Buscado = App.buscarPorCedula(Integer.parseInt(CampoCedula.getText()));
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Verifique que los datos a buscar esten correctos!");
        }
        if (Buscado != null) {
            Modelo.addElement(Buscado.getCedula() + ": " + Buscado.getNombre() + " " + Buscado.getApellido());
        }
    }//GEN-LAST:event_BuscarCedulaActionPerformed

    private void SeleccionarDonanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeleccionarDonanteActionPerformed
        int index = Lista.getSelectedIndex();
        if (index != -1) {
            String Donante = (String) Modelo.get(index);
            String cedula = "";
            for (int i = 0; i < cuentaDigitos(Donante); i++) {
                cedula += Donante.charAt(i);
            }
            BackEnd.Donante seleccionado = App.buscarPorCedula(parseInt(cedula));
            Ficha.ConfigurarFicha(seleccionado);
            Ficha.setVisible(true);
        }
    }//GEN-LAST:event_SeleccionarDonanteActionPerformed

    private void FemeninoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FemeninoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FemeninoActionPerformed

    private void ApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApellidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ApellidosActionPerformed

    private void ListaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListaMouseClicked
        if ((CampoCedula.getText().equals("Cédula") || CampoCedula.getText().isEmpty()) && (TipoSangre.getText().equals("Tipo de Sangre") || TipoSangre.getText().isEmpty())) {
            int index = Lista.getSelectedIndex();
            Modelo.clear();
            for (int i = 0; i < App.getListaDonantes().size(); i++) {
                BackEnd.Donante actual = App.getListaDonantes().get(i);
                Modelo.addElement(actual.getCedula() + ": " + actual.getNombre() + " " + actual.getApellido());
            }
            Lista.setSelectedIndex(index);
        }
    }//GEN-LAST:event_ListaMouseClicked

    private void CampoCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoCedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoCedulaActionPerformed

    private void BuscarSangreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarSangreActionPerformed
        Modelo.clear();
        ArrayList<BackEnd.Donante> Buscado = null;
        if ("O+".equals(TipoSangre.getText()) || "O-".equals(TipoSangre.getText()) || "A+".equals(TipoSangre.getText()) || "A-".equals(TipoSangre.getText()) || "B+".equals(TipoSangre.getText()) || "B-".equals(TipoSangre.getText()) || "AB+".equals(TipoSangre.getText()) || "AB-".equals(TipoSangre.getText()) || "RH+".equals(TipoSangre.getText()) || "RH-".equals(TipoSangre.getText())) {
            Buscado = App.buscarPorSangre(TipoSangre.getText());
        } else {
            JOptionPane.showMessageDialog(null, "Hay un problema con los datos introducidos.");
        }
        if (Buscado != null) {

            for (int i = 0; i < Buscado.size(); i++) {
                BackEnd.Donante DonBuscado = Buscado.get(i);
                Modelo.addElement(DonBuscado.getCedula() + ": " + DonBuscado.getNombre() + " " + DonBuscado.getApellido());
            }
        }
    }//GEN-LAST:event_BuscarSangreActionPerformed

    private void HeDonadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HeDonadoActionPerformed
        FechaUltDonacion.setEnabled(!HeDonado.isSelected());
    }//GEN-LAST:event_HeDonadoActionPerformed

    private void TipoSangreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TipoSangreActionPerformed

    }//GEN-LAST:event_TipoSangreActionPerformed

    private void CampoCedulaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CampoCedulaMouseClicked
        CampoCedula.setText("");
        TipoSangre.setText("Tipo de sangre");

    }//GEN-LAST:event_CampoCedulaMouseClicked

    private void TipoSangreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TipoSangreMouseClicked
        TipoSangre.setText("");
        CampoCedula.setText("Cédula");
    }//GEN-LAST:event_TipoSangreMouseClicked

    private void CedulaDonanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CedulaDonanteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CedulaDonanteActionPerformed

    private void NombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton A1;
    private javax.swing.JPanel Agregar;
    private javax.swing.JButton AgregarDonante;
    private javax.swing.JButton AgregarDonante1;
    private javax.swing.JTextField Apellidos;
    private javax.swing.JButton BuscarCedula;
    private javax.swing.JButton BuscarSangre;
    private javax.swing.JTextField CampoCedula;
    private javax.swing.JTextField CedulaDonante;
    private javax.swing.JList<String> Estados;
    private DefaultListModel Modelo2;
    private com.toedter.calendar.JDateChooser FechaNacimiento;
    private com.toedter.calendar.JDateChooser FechaUltDonacion;
    private com.toedter.calendar.JDateChooser FechaUltPiercing;
    private javax.swing.JRadioButton Femenino;
    private javax.swing.JCheckBox HeDonado;
    private javax.swing.JList<String> Lista;
    private DefaultListModel Modelo;
    private javax.swing.JRadioButton Masculino;
    private javax.swing.JTextField Nombre;
    private javax.swing.JRadioButton O0;
    private javax.swing.JRadioButton O1;
    private javax.swing.JLabel ONTV;
    private javax.swing.JLabel ONTV1;
    private javax.swing.JTextField PesoDonante;
    private javax.swing.JPanel Principal;
    private javax.swing.JButton SeleccionarDonante;
    private javax.swing.JTextField Telefono;
    private javax.swing.JCheckBox TienePiercing;
    private javax.swing.JTextField TipoSangre;
    private javax.swing.JButton cancelar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton10;
    private javax.swing.JRadioButton jRadioButton11;
    private javax.swing.JRadioButton jRadioButton12;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JRadioButton jRadioButton9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.ButtonGroup sexo;
    private javax.swing.ButtonGroup tipoSangre;
    // End of variables declaration//GEN-END:variables

}
